pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- builders
-- by cameron alsbrook

-- init

function _init()
 cls()
 music(0)
 for i=0,10 do
  spr(001,3+i*8,10)
 end
 board = {
 {0,0,0,0,0},
 {0,0,0,0,0},
 {0,0,0,0,0},
 {0,0,0,0,0},
 {0,0,0,0,0}
 }
 builders = {orange={{1,1},{2,1}}, blue={{4,5},{5,5}}}
 selection = {1,1}
 tile_colors = {2,8,14,13}
 pointers = {sel=7,move=5,build=9}
 mode = "sel"
 _drw = drawboard
 _upd = update_game
 selected = {}
	turn = "orange"
	previous = {}
	state = "unfinished"
end

function _draw()
	_drw()
	--print(selection[1],0,0,7)
	--cursor(0,7)
	--print(selection[2])
	--print(check_occupied(selection[1],selection[2]),7)
	--print(turn)
	-- print(state)
	--print(check_range(1,1,selection[1],selection[2]))
end


function _update()
	_upd()
end


-->8
-- update functions

function update_placement()

end

function update_game()
	if btnp(‚û°Ô∏è) and selection[1]<5 then
		selection[1] += 1
	end
	if btnp(‚¨ÖÔ∏è) and selection[1]>1 then
		selection[1] -= 1
	end
	if btnp(‚¨áÔ∏è) and selection[2]<5 then
		selection[2] +=1
	end
	if btnp(‚¨ÜÔ∏è) and selection[2]>1 then
		selection[2] -=1
	end
	if btnp(üÖæÔ∏è) then
		if mode=="sel" then
			if check_occupied(selection[1],selection[2]) then
				if builders[turn][1][1] == selection[1] and builders[turn][1][2] == selection[2] then
					selected = builders[turn][1]
					mode = "move"
				elseif builders[turn][2][1] == selection[1] and builders[turn][2][2] == selection[2] then
					selected = builders[turn][2]
					mode = "move"
				end
				
			end
		elseif mode=="move" then
			if check_range(selected[1],selected[2],selection[1],selection[2]) and check_climb(selected[1],selected[2],selection[1],selection[2]) then
				move(selected,selection[1],selection[2])
				selected[1]=selection[1]
				selected[2]=selection[2]
				mode = "build"
			end
		elseif mode=="build" then
			if check_range(selected[1],selected[2],selection[1],selection[2]) and not check_occupied(selection[1],selection[2]) and board[selection[1]][selection[2]] <4 then
				build(selection[1],selection[2])
				check_win()
				if state == "unfinished" then
					switch_turn()
				end
				mode = "sel"
			else
				mode = "sel"
				selected[1] = previous[1]
				selected[2] = previous[2]
				previous = {}
				selected={}
			end
		end
	end
	if btnp(‚ùé) then
		if mode=="sel" then
			return
		elseif mode=="move" then
			mode = "sel"
			selected = {}
			previous={}
		elseif mode=="build" then
			selected[1] = previous[1]
			selected[2] = previous[2]
			mode = "move"
		end
	end
end
-->8
-- draw functions

function drawboard()
	
	rectfill(0,0,128,128,0)
	map(0,0)
	
	for i=1, 5 do
		j = i
		while j > 0 do
			spr(3,58-(i*7)+(j*14-14),20+(i*7),2,2)
			j -= 1
		end
	end
	for i=1, 4 do
		j = 5-i
		while j > 0 do
			spr(3,44-((5-i)*7)+(j*14),55+(i*7),2,2)
			j-=1
		end
	end
	-- printing heights
	-- for i=1, 5 do
	-- 	for j=1, 5 do
	-- 		print(board[i][j],58-(i*7-7)+(j*7-7), 32+(i*7-7)+(j*7-7),7)
	-- 	end
	-- end
	for i=1, 5 do
		for j=1, 5 do
			for k=1, board[i][j] do
				-- draw levels
				pal(1,tile_colors[k])
				spr(3,58-(i*7)+(j*7-7), 27+(i*7-7)+(j*7-7)-(k*3),2,2)
				pal()
			end
			-- draw selection
			if i==selection[2] and j==selection[1] then
				spr(pointers[mode],51-(i*7-7)+(j*7-7),27+(i*7-7)+(j*7-7)-(board[i][j]*3),2,2)
			end
			--- draw builders
			if i==builders["orange"][1][2] and j==builders["orange"][1][1] then
				spr(1,62-(i*7)+(j*7-7), 29+(i*7-7)+(j*7-7)-(board[i][j]*3))
			end
			if i==builders["orange"][2][2] and j==builders["orange"][2][1] then
				spr(1,63-(i*7)+(j*7-7), 29+(i*7-7)+(j*7-7)-(board[i][j]*3),1,1,true)
			end
			if i==builders["blue"][1][2] and j==builders["blue"][1][1] then
				spr(2,62-(i*7)+(j*7-7), 29+(i*7-7)+(j*7-7)-(board[i][j]*3))
			end
			if i==builders["blue"][2][2] and j==builders["blue"][2][1] then
				spr(2,63-(i*7)+(j*7-7), 29+(i*7-7)+(j*7-7)-(board[i][j]*3),1,1,true)
			end
		end
	end
end

function draw_winner()
	cls()
	map(0,0)
	if state=="blue wins" then
		pal(6,12)
	elseif state=="orange wins" then
		pal(6,9)
	end
	for i=0, 5 do
		spr(80+i,30+(i*9),40,1,1)
	end
	pal()
end
-->8
-- tools
function check_occupied(x,y)
	for i=1, 2 do
		if builders["orange"][i][1] == x and builders["orange"][i][2]==y then
			return true
		elseif builders["blue"][i][1] == x and builders["blue"][i][2]==y then
			return true
		end
	end
	return false
end

function build(x,y)
	board[y][x]+=1
end

function check_build(start_x,start_y,dest_x,dest_y,build_x,build_y)
	if board[build_y][build_x] < 4 and (not check_occupied(build_x,build_y) or (start_x == build_x and start_y == build_y)) then
		return true
	else
		return false
	end
end

function check_range(start_x,start_y,dest_x,dest_y)
	if abs(start_x-dest_x)<=1 and abs(start_y-dest_y) <=1 then
		if start_x == dest_x and start_y == dest_y then
			return false
		else
			return true
		end
	end
	return false
end

function check_climb(start_x,start_y,dest_x,dest_y)
	if board[dest_y][dest_x] - board[start_y][start_x] <=1 then
		return true
	else
		return false
	end
end

function check_within_board(x,y)
	if 1<=x and x<=5 and 1<=y and y<=5 then
		return true
	else
		return false
	end
end

function move(builder,dest_x,dest_y)
	if check_within_board(dest_x,dest_y) then
		if not check_occupied(dest_x,dest_y) then
			if check_range(builder[1],builder[2],dest_x,dest_y) then
				if check_climb(builder[1],builder[2],dest_x,dest_y) then
					previous[1]=builder[1]
					previous[2]=builder[2]
					builder[1]=dest_x
					builder[2]=dest_y
				end
			end
		end
	end
end

function switch_turn()
	if turn == "orange" then
		turn = "blue"
	else
		turn = "orange"
	end
end

function check_win()
	for i=1,2 do
		builder = builders["orange"][i]
		if board[builder[2]][builder[1]] == 3 then
			state = "orange wins"
			_drw=draw_winner
		end
		builder = builders["blue"][i]
		if board[builder[2]][builder[1]] == 3 then
			state = "blue wins"
			_drw=draw_winner
		end
	end
end
__gfx__
0000000000099900000ccc0000000000f00000000000000777000000000000000000000000000077770000000000000000000000000000000000000000000000
000000000099999000ccccc00000000f1f0000000000000777000000000000007000000000000007700000000600000000060000000000000000000000000000
007007000099999000ccccc0000000f111f0000000000007770000000000000a0a00000000000007700000000000000000000000000000000000000000000000
00077000099999990ccccccc00000f11111f00000000000777000000000000700070000000000007700000000000006000000000000000000000000000000000
0007700000144140001441400000f1111111f000000000077700000000000a00000a000000000777777000000000000000000000000000000000000000000000
007007000044444000444440000f111111111f000000077777770000000070000000700000000777777000000006000000000060000000000000000000000000
00000000000cccc00009999000f11111111111f00000007777700000000a000000000a0000000777777000000000000000000000000000000000000000000000
0000000000060060000600600f1111111111111f0000000777000000007000000000007000000777777000000000000000000000000000000000000000000000
00000000000000000000000004f11111111111f40000000070000000000a000000000a0000000077770000000000000000000000000000000000000000000000
000000000000000000000000044f111111111f440000000000000000000070000000700000000000000000000000000000000000000000000000000000000000
0000000000000000000000000044f1111111f440000000000000000000000a00000a000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000044f11111f44000000000000000000000000700070000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000044f111f4400000000000000000000000000a0a00000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000044f1f4400000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000044f44000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000004440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666600660000666666666666000000666666006666666666666666666666000000000000000000000000000000000000000000000000000000000000000000
66666600660000666666666666000000666666006666666666666666666666000000000000000000000000000000000000000000000000000000000000000000
66666666660000660066660066000000660000666666660066000066666666660000000000000000000000000000000000000000000000000000000000000000
66666666660000660066660066000000660000666666660066000066666666660000000000000000000000000000000000000000000000000000000000000000
66000066660000660066660066000000660000666600000066666666000000660000000000000000000000000000000000000000000000000000000000000000
66000066660000660066660066000000660000666600000066666666000000660000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666666666006666666666006600666666660000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666666666006666666666006600666666660000000000000000000000000000000000000000000000000000000000000000
66000066666666666600006666000066666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
66000066666666666600006666000066666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
66000066006666006666006666660066666666006600006600000000000000000000000000000000000000000000000000000000000000000000000000000000
66000066006666006666006666660066666666006600006600000000000000000000000000000000000000000000000000000000000000000000000000000000
66006666006666006600666666006666660000006666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
66006666006666006600666666006666660000006666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666600006666000066666666666600660000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666600006666000066666666666600660000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0b0c0b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0c0b0c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000e00001c655000001165500000266550000011655000001c655000001165500000266550000011655000001c655000001165500000266550000011655000001c65500000116550000026655000001165500000
000e00000605000000000001205000000000000405000000060500000000000120500000000000020500000004050000000000010050000000000002050000000405000000000001005000000000000405000000
__music__
00 01424344
00 01424344
03 01024344

